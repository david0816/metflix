{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Trailer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","tvApi","get","append_to_response","term","query","encodeURIComponent","movieApi","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Thumbnail","imgUrl","TrailerLink","Trailer","src","href","Backdrop","bgImage","Content","Cover","Data","ItemContainer","Divider","Overview","VideoContainer","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","videos","video","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f56f9619.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.5725b4c4.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 2px solid\n    ${(props) => (props.current ? \"#c0392b\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TVs</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  margin-top: 100px;\n  font-size: 32px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏳\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n  font-size: 22px;\n  padding: 25px 0px;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 3px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 17 ? `${title.substring(0, 17)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Metflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"a9ee83d45162e0b3999f697d77c7310f\",\n    language: \"en-US\",\n  },\n});\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const movieApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await movieApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await movieApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await movieApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find information of Movies\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    console.log(this.state);\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Metflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated TV Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular TV Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find information of TV Shows\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    console.log(this.state);\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  loading,\n  error,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Metflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Searching Movies and TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      ></Input>\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    {error && <Message color=\"#e74c3c\" text={error} />}\n    {tvResults &&\n      movieResults &&\n      tvResults.length === 0 &&\n      movieResults.length === 0 && (\n        <Message text=\"Nothing Found\" color=\"#bdc3c7\" />\n      )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    console.log(value);\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await movieApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find results.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Thumbnail = styled.div`\n  height: 125px;\n  background-image: url(${(props) => props.imgUrl});\n  background-size: cover;\n  background-position: center center;\n  border-radius: 3px;\n`;\n\nconst TrailerLink = styled.a``;\n\nconst Trailer = ({ id, src }) => (\n  <TrailerLink href={`http://youtube.com/watch?v=${src}`} target=\"_blank\">\n    <Thumbnail imgUrl={`https://img.youtube.com/vi/${src}/0.jpg`}></Thumbnail>\n  </TrailerLink>\n);\n\nTrailer.propTypes = {\n  id: PropTypes.string.isRequired,\n  src: PropTypes.string,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Trailer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Trailer from \"../../Components/Trailer\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 30px;\n`;\n\nconst Title = styled.div`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0px;\n`;\n\nconst Item = styled.span`\n  font-size: 14px;\n`;\n\nconst Divider = styled.span`\n  margin: 0px 10px;\n`;\n\nconst Overview = styled.div`\n  margin-bottom: 40px;\n  font-size: 16px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 90%;\n`;\n\nconst VideoContainer = styled.div`\n  width: 100%;\n  height: 50%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 180px);\n  grid-gap: 10px;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Metflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message color=\"#e74c3c\" text={error} />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Metflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          <VideoContainer>\n            {result.videos.results.map((video) => (\n              <Trailer\n                key={video.id}\n                id={video.id}\n                src={video.key}\n                name={video.name}\n              ></Trailer>\n            ))}\n          </VideoContainer>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      loading: true,\n      error: null,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await movieApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, loading, error } = this.state;\n    return <DetailPresenter result={result} loading={loading} error={error} />;\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" exact component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/tv/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n        height: 100vh;\n    }\n`;\n\nexport default GlobalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nimport \"./api\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}